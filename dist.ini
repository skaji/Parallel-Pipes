name = Parallel-Pipes

[ConfirmRelease]
[CopyFilesFromBuild]
copy = META.json
copy = LICENSE
[CopyFilesFromRelease]
match = \.pm$
[Git::Check]
allow_dirty = Changes
allow_dirty = META.json
[Git::Contributors]
[Git::GatherDir]
exclude_filename = META.json
exclude_filename = LICENSE
[GithubMeta]
issues = 1
[License]
[LicenseFromModule]
override_author = 1
[MetaJSON]
[MetaProvides::Package]
inherit_version = 0
inherit_missing = 0
[ModuleBuildTiny]
[Prereqs::From::cpmfile]
[PruneFiles]
filename = dist.ini
filename = cpm.yml
match = ^(xt|author|maint|eg)/
[ReadmeAnyFromPod]
type = markdown
filename = README.md
location = root
[ReversionOnRelease]
prompt = 1
[StaticInstall]
[TestRelease]
[VersionFromMainModule]

[NextRelease]
format = %v  %{yyyy-MM-dd HH:mm:ss VVV}d%{ (TRIAL RELEASE)}T
[CheckChangesHasContent]
[UploadToCPAN]
;[FakeRelease]
[Git::Commit]
commit_msg = %v
allow_dirty = Changes
allow_dirty = META.json
allow_dirty_match = \.pm$
[Git::Tag]
tag_format = %v
tag_message =
[Git::Push]
[GitHubREADME::Badge]
badges = github_actions/test.yml

[MetaNoIndex]
package = Parallel::Pipe::Impl
package = Parallel::Pipe::Here
package = Parallel::Pipe::There
package = Parallel::Pipe::Impl::NoFork
